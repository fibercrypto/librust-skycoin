/* 
 * Skycoin REST API.
 *
 * Skycoin is a next-generation cryptocurrency.
 *
 * OpenAPI spec version: 0.25.1
 * Contact: contact@skycoin.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Apiv1wallettransactionTo {
  #[serde(rename = "hours")]
  hours: Option<i64>,
  #[serde(rename = "address")]
  address: Option<String>,
  #[serde(rename = "coins")]
  coins: Option<i64>
}

impl Apiv1wallettransactionTo {
  pub fn new() -> Apiv1wallettransactionTo {
    Apiv1wallettransactionTo {
      hours: None,
      address: None,
      coins: None
    }
  }

  pub fn set_hours(&mut self, hours: i64) {
    self.hours = Some(hours);
  }

  pub fn with_hours(mut self, hours: i64) -> Apiv1wallettransactionTo {
    self.hours = Some(hours);
    self
  }

  pub fn hours(&self) -> Option<&i64> {
    self.hours.as_ref()
  }

  pub fn reset_hours(&mut self) {
    self.hours = None;
  }

  pub fn set_address(&mut self, address: String) {
    self.address = Some(address);
  }

  pub fn with_address(mut self, address: String) -> Apiv1wallettransactionTo {
    self.address = Some(address);
    self
  }

  pub fn address(&self) -> Option<&String> {
    self.address.as_ref()
  }

  pub fn reset_address(&mut self) {
    self.address = None;
  }

  pub fn set_coins(&mut self, coins: i64) {
    self.coins = Some(coins);
  }

  pub fn with_coins(mut self, coins: i64) -> Apiv1wallettransactionTo {
    self.coins = Some(coins);
    self
  }

  pub fn coins(&self) -> Option<&i64> {
    self.coins.as_ref()
  }

  pub fn reset_coins(&mut self) {
    self.coins = None;
  }

}



