/* 
 * Skycoin REST API.
 *
 * Skycoin is a next-generation cryptocurrency.
 *
 * OpenAPI spec version: 0.25.1
 * Contact: contact@skycoin.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct InlineObject {
  #[serde(rename = "change_address")]
  change_address: Option<String>,
  #[serde(rename = "hours_selection")]
  hours_selection: Option<::models::Apiv1wallettransactionHoursSelection>,
  #[serde(rename = "ignore_unconfirmed")]
  ignore_unconfirmed: Option<bool>,
  #[serde(rename = "to")]
  to: Option<Vec<::models::Apiv1wallettransactionTo>>,
  #[serde(rename = "wallet")]
  wallet: Option<::models::Apiv1wallettransactionWallet>
}

impl InlineObject {
  pub fn new() -> InlineObject {
    InlineObject {
      change_address: None,
      hours_selection: None,
      ignore_unconfirmed: None,
      to: None,
      wallet: None
    }
  }

  pub fn set_change_address(&mut self, change_address: String) {
    self.change_address = Some(change_address);
  }

  pub fn with_change_address(mut self, change_address: String) -> InlineObject {
    self.change_address = Some(change_address);
    self
  }

  pub fn change_address(&self) -> Option<&String> {
    self.change_address.as_ref()
  }

  pub fn reset_change_address(&mut self) {
    self.change_address = None;
  }

  pub fn set_hours_selection(&mut self, hours_selection: ::models::Apiv1wallettransactionHoursSelection) {
    self.hours_selection = Some(hours_selection);
  }

  pub fn with_hours_selection(mut self, hours_selection: ::models::Apiv1wallettransactionHoursSelection) -> InlineObject {
    self.hours_selection = Some(hours_selection);
    self
  }

  pub fn hours_selection(&self) -> Option<&::models::Apiv1wallettransactionHoursSelection> {
    self.hours_selection.as_ref()
  }

  pub fn reset_hours_selection(&mut self) {
    self.hours_selection = None;
  }

  pub fn set_ignore_unconfirmed(&mut self, ignore_unconfirmed: bool) {
    self.ignore_unconfirmed = Some(ignore_unconfirmed);
  }

  pub fn with_ignore_unconfirmed(mut self, ignore_unconfirmed: bool) -> InlineObject {
    self.ignore_unconfirmed = Some(ignore_unconfirmed);
    self
  }

  pub fn ignore_unconfirmed(&self) -> Option<&bool> {
    self.ignore_unconfirmed.as_ref()
  }

  pub fn reset_ignore_unconfirmed(&mut self) {
    self.ignore_unconfirmed = None;
  }

  pub fn set_to(&mut self, to: Vec<::models::Apiv1wallettransactionTo>) {
    self.to = Some(to);
  }

  pub fn with_to(mut self, to: Vec<::models::Apiv1wallettransactionTo>) -> InlineObject {
    self.to = Some(to);
    self
  }

  pub fn to(&self) -> Option<&Vec<::models::Apiv1wallettransactionTo>> {
    self.to.as_ref()
  }

  pub fn reset_to(&mut self) {
    self.to = None;
  }

  pub fn set_wallet(&mut self, wallet: ::models::Apiv1wallettransactionWallet) {
    self.wallet = Some(wallet);
  }

  pub fn with_wallet(mut self, wallet: ::models::Apiv1wallettransactionWallet) -> InlineObject {
    self.wallet = Some(wallet);
    self
  }

  pub fn wallet(&self) -> Option<&::models::Apiv1wallettransactionWallet> {
    self.wallet.as_ref()
  }

  pub fn reset_wallet(&mut self) {
    self.wallet = None;
  }

}



