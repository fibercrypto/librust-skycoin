/* 
 * Skycoin REST API.
 *
 * Skycoin is a next-generation cryptocurrency.
 *
 * OpenAPI spec version: 0.25.1
 * Contact: contact@skycoin.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Apiv1wallettransactionHoursSelection {
  #[serde(rename = "mode")]
  mode: Option<String>,
  #[serde(rename = "share_factor")]
  share_factor: Option<String>,
  #[serde(rename = "type")]
  _type: Option<String>
}

impl Apiv1wallettransactionHoursSelection {
  pub fn new() -> Apiv1wallettransactionHoursSelection {
    Apiv1wallettransactionHoursSelection {
      mode: None,
      share_factor: None,
      _type: None
    }
  }

  pub fn set_mode(&mut self, mode: String) {
    self.mode = Some(mode);
  }

  pub fn with_mode(mut self, mode: String) -> Apiv1wallettransactionHoursSelection {
    self.mode = Some(mode);
    self
  }

  pub fn mode(&self) -> Option<&String> {
    self.mode.as_ref()
  }

  pub fn reset_mode(&mut self) {
    self.mode = None;
  }

  pub fn set_share_factor(&mut self, share_factor: String) {
    self.share_factor = Some(share_factor);
  }

  pub fn with_share_factor(mut self, share_factor: String) -> Apiv1wallettransactionHoursSelection {
    self.share_factor = Some(share_factor);
    self
  }

  pub fn share_factor(&self) -> Option<&String> {
    self.share_factor.as_ref()
  }

  pub fn reset_share_factor(&mut self) {
    self.share_factor = None;
  }

  pub fn set__type(&mut self, _type: String) {
    self._type = Some(_type);
  }

  pub fn with__type(mut self, _type: String) -> Apiv1wallettransactionHoursSelection {
    self._type = Some(_type);
    self
  }

  pub fn _type(&self) -> Option<&String> {
    self._type.as_ref()
  }

  pub fn reset__type(&mut self) {
    self._type = None;
  }

}



